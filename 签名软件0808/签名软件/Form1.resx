<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>